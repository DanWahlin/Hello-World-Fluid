{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 JetBrainsMono-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red157\green0\blue210;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue109;\red144\green1\blue18;\red0\green0\blue255;\red11\green90\blue180;\red15\green112\blue1;
\red101\green76\blue29;\red19\green118\blue70;\red32\green108\blue135;\red11\green90\blue180;\red101\green76\blue29;
\red32\green108\blue135;}
{\*\expandedcolortbl;;\cssrgb\c68627\c0\c85882;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c0\c6275\c50196;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c0\c100000;\cssrgb\c0\c43922\c75686;\cssrgb\c0\c50196\c0;
\cssrgb\c47451\c36863\c14902;\cssrgb\c3529\c52549\c34510;\cssrgb\c14902\c49804\c60000;\cssrgb\c0\c43922\c75686;\cssrgb\c47451\c36863\c14902;
\cssrgb\c14902\c49804\c60000;}
\margl1440\margr1440\vieww27120\viewh17580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Step by Step\

\fs32 \

\fs36 Step 1: Import SharedMap and define container schema
\f1\fs32 \
\
\pard\pardeftab720\sl540\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 SharedMap\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 "@fluidframework/map"\cf4 \strokec4 ;\
\
\pard\pardeftab720\sl540\partightenfactor0
\cf7 \strokec7 const\cf4 \strokec4  \cf8 \strokec8 containerSchema\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 name:\cf4 \strokec4  \cf6 \strokec6 'cra-demo-container'\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 initialObjects:\cf4 \strokec4  \{ \cf5 \strokec5 mySharedMap:\cf4 \strokec4  \cf5 \strokec5 SharedMap\cf4 \strokec4  \}\cb1 \
\cb3 \};\
\
\cb1 Step 2: Build \'93serviceConfig\'94\
\
\pard\pardeftab720\sl540\partightenfactor0
\cf9 \cb3 \strokec9 /**\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9  * This function imitates a file system. It allows us to create durable IDs for containers so we can access them later.\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9  * The ID is the number after the hash in the URL.\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9  * In a production system, we may store the list of container ID's in another database.\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf10 \strokec10 getContainerId\cf4 \strokec4  = () \cf7 \strokec7 =>\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 let\cf4 \strokec4  \cf5 \strokec5 isNew\cf4 \strokec4  = \cf7 \strokec7 false\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 window\cf4 \strokec4 .\cf5 \strokec5 location\cf4 \strokec4 .\cf5 \strokec5 hash\cf4 \strokec4 .\cf8 \strokec8 length\cf4 \strokec4  === \cf11 \strokec11 0\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 isNew\cf4 \strokec4  = \cf7 \strokec7 true\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 window\cf4 \strokec4 .\cf5 \strokec5 location\cf4 \strokec4 .\cf5 \strokec5 hash\cf4 \strokec4  = \cf12 \strokec12 Date\cf4 \strokec4 .\cf10 \strokec10 now\cf4 \strokec4 ().\cf10 \strokec10 toString\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\cb3     \cf7 \strokec7 const\cf4 \strokec4  \cf8 \strokec8 containerId\cf4 \strokec4  = \cf5 \strokec5 window\cf4 \strokec4 .\cf5 \strokec5 location\cf4 \strokec4 .\cf5 \strokec5 hash\cf4 \strokec4 .\cf10 \strokec10 substring\cf4 \strokec4 (\cf11 \strokec11 1\cf4 \strokec4 );\cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \{ \cf5 \strokec5 containerId\cf4 \strokec4 , \cf5 \strokec5 isNew\cf4 \strokec4  \};\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\sl540\partightenfactor0
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \{ \cf8 \strokec8 containerId\cf4 \strokec4 , \cf8 \strokec8 isNew\cf4 \strokec4  \} = \cf10 \strokec10 getContainerId\cf4 \strokec4 ();\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf8 \strokec8 serviceConfig\cf4 \strokec4  = \{ \cf5 \strokec5 id:\cf4 \strokec4  \cf8 \strokec8 containerId\cf4 \strokec4  \};\cb1 \
\
Step 3: Initialize Tinylicious\
\
\pard\pardeftab720\sl540\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 TinyliciousClient\cf4 \strokec4  \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 "@fluid-experimental/tinylicious-client"\cf4 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 TinyliciousClient\cf4 \strokec4 .\cf10 \strokec10 init\cf4 \strokec4 ();\cb1 \
\
\
Step 4: Create or Get Container and return initialObjects (schema with SharedMap)\
\
\pard\pardeftab720\sl540\partightenfactor0
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf10 \strokec10 getFluidData\cf4 \strokec4  = \cf7 \strokec7 async\cf4 \strokec4  () \cf7 \strokec7 =>\cf4 \strokec4  \{\cb1 \
\
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 const\cf4 \strokec4  [\cf8 \strokec8 fluidContainer\cf4 \strokec4 , ] = \cf5 \strokec5 isNew\cf4 \cb1 \strokec4 \
\cb3         ? \cf2 \strokec2 await\cf4 \strokec4  \cf5 \strokec5 TinyliciousClient\cf4 \strokec4 .\cf10 \strokec10 createContainer\cf4 \strokec4 (\cf5 \strokec5 serviceConfig\cf4 \strokec4 , \cf5 \strokec5 containerSchema\cf4 \strokec4 )\cb1 \
\cb3         : \cf2 \strokec2 await\cf4 \strokec4  \cf5 \strokec5 TinyliciousClient\cf4 \strokec4 .\cf10 \strokec10 getContainer\cf4 \strokec4 (\cf5 \strokec5 serviceConfig\cf4 \strokec4 , \cf5 \strokec5 containerSchema\cf4 \strokec4 );\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf8 \strokec8 fluidContainer\cf4 \strokec4 .\cf5 \strokec5 initialObjects\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
Step 5: Add hooks\
\
\cb3     \cf7 \strokec7 const\cf4 \strokec4  [\cf8 \strokec8 fluidData\cf4 \strokec4 , \cf10 \strokec10 setFluidData\cf4 \strokec4 ] = \cf12 \strokec12 React\cf4 \strokec4 .\cf10 \strokec10 useState\cf4 \strokec4 ();\
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0     \cf7 const\cf4  [\cf13 viewData\cf4 , \cf14 setViewData\cf4 ] = \cf15 React\cf4 .\cf14 useState\cf4 ();\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \
\cb3     \cf12 \strokec12 React\cf4 \strokec4 .\cf10 \strokec10 useEffect\cf4 \strokec4 (() \cf7 \strokec7 =>\cf4 \strokec4  \{\cb1 \
\cb3         \cf10 \strokec10 getFluidData\cf4 \strokec4 ().\cf10 \strokec10 then\cf4 \strokec4 (\cf5 \strokec5 data\cf4 \strokec4  \cf7 \strokec7 =>\cf4 \strokec4  \cf10 \strokec10 setFluidData\cf4 \strokec4 (\cf5 \strokec5 data\cf4 \strokec4 ))\cb1 \
\cb3     \}, []);\cb1 \
\
Step 6: Connect View Data to SharedMap using useEffect() \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0     \
\pard\pardeftab720\sl540\partightenfactor0
\cf12 \strokec12 	React\cf4 \strokec4 .\cf10 \strokec10 useEffect\cf4 \strokec4 (() \cf7 \strokec7 =>\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3         \cf2 \strokec2 if\cf4 \strokec4  (!\cf5 \strokec5 fluidData\cf4 \strokec4 ) \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf7 \strokec7 const\cf4 \strokec4  \{ \cf8 \strokec8 mySharedMap\cf4 \strokec4  \} = \cf5 \strokec5 fluidData\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf7 \strokec7 const\cf4 \strokec4  \cf10 \strokec10 syncView\cf4 \strokec4  = () \cf7 \strokec7 =>\cf4 \strokec4  \cf10 \strokec10 setViewData\cf4 \strokec4 (\{ \cf5 \strokec5 time:\cf4 \strokec4  \cf8 \strokec8 mySharedMap\cf4 \strokec4 .\cf10 \strokec10 get\cf4 \strokec4 (\cf6 \strokec6 "time"\cf4 \strokec4 ) \});\cb1 \
\cb3         \cb1 \
\cb3         \cf9 \strokec9 // ensure sync runs at least once\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 syncView\cf4 \strokec4 ();\cb1 \
\
\cb3         \cf9 \strokec9 // update state each time our map changes\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 mySharedMap\cf4 \strokec4 .\cf10 \strokec10 on\cf4 \strokec4 (\cf6 \strokec6 "valueChanged"\cf4 \strokec4 , \cf10 \strokec10 syncView\cf4 \strokec4 );\cb1 \
\cb3         \cf2 \strokec2 return\cf4 \strokec4  () \cf7 \strokec7 =>\cf4 \strokec4  \{ \cf8 \strokec8 mySharedMap\cf4 \strokec4 .\cf10 \strokec10 off\cf4 \strokec4 (\cf6 \strokec6 "valueChanged"\cf4 \strokec4 , \cf10 \strokec10 syncView\cf4 \strokec4 ) \}\cb1 \
\
\cb3     \}, [\cf5 \strokec5 fluidData\cf4 \strokec4 ])\
\
Step 7: Add setTime function for click event\
\
    \cf7 \strokec7 const\cf4 \strokec4  \cf10 \strokec10 setTime\cf4 \strokec4  = () \cf7 \strokec7 =>\cf4 \strokec4  \cf5 \strokec5 fluidData\cf4 \strokec4 .\cf5 \strokec5 mySharedMap\cf4 \strokec4 .\cf10 \strokec10 set\cf4 \strokec4 (\cf6 \strokec6 "time"\cf4 \strokec4 , \cf12 \strokec12 Date\cf4 \strokec4 .\cf10 \strokec10 now\cf4 \strokec4 ().\cf10 \strokec10 toString\cf4 \strokec4 ());\cb1 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs32 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\
}